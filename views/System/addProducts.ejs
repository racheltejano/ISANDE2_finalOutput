<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add Product</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f9f9f9;
    }

    .container {
      max-width: 1200px;
      margin: 50px auto;
      padding: 20px;
      background: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
      display: flex;
      gap: 20px;
    }

    h1 {
      text-align: center;
      color: #333;
    }

    .form-container {
      flex: 2;
    }

    .form-group {
      margin-bottom: 15px;
    }

    label {
      display: block;
      font-weight: bold;
      margin-bottom: 5px;
    }

    input[type="text"],
    input[type="number"],
    select,
    textarea {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      box-sizing: border-box;
    }

    textarea {
      resize: vertical;
    }

    button {
      display: block;
      width: 100%;
      padding: 10px;
      background-color: #28a745;
      color: #fff;
      border: none;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
    }

    button:hover {
      background-color: #218838;
    }

    .image-upload-container {
      flex: 1;
      padding: 20px;
      background-color: #f4f4f9;
      border-radius: 8px;
      border: 1px dashed #ddd;
      text-align: center;
    }

    .image-upload-container h2 {
      font-size: 18px;
      margin-bottom: 15px;
    }

    .image-preview {
      margin-top: 10px;
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
    }

    .image-preview img {
      width: 80px;
      height: 80px;
      border-radius: 5px;
      object-fit: cover;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Form Section -->
    <div class="form-container">
      <h1>Add Product</h1>
      <form id="addProductForm" action="/seller/add-product" method="POST" enctype="multipart/form-data">
        <!-- Product Name -->
        <div class="form-group">
          <label for="name">Product Name</label>
          <input type="text" id="name" name="name" placeholder="Enter product name" required>
        </div>

        <!-- Category -->
        <div class="form-group">
          <label for="category_id">Category</label>
          <select id="category_id" name="category_id" required>
            <option value="" disabled selected>Select a category</option>
            <option value="1">Clothes</option>
            <option value="2">Accessories</option>
            <option value="3">Gadgets</option>
            <option value="4">Cameras</option>
            <option value="5">Makeup</option>
            <option value="6">Skincare</option>
            <option value="7">Furniture</option>
            <option value="8">Books</option>
            <option value="9">Toys</option>
            <option value="10">Shoes</option>
          </select>
        </div>

        <!-- Price -->
        <div class="form-group">
          <label for="price">Price</label>
          <input type="number" id="price" name="price" placeholder="Enter product price" required>
        </div>

        <!-- Stock -->
        <div class="form-group">
          <label for="stock">Stock</label>
          <input type="number" id="stock" name="stock" placeholder="Enter product stock" required>
        </div>

        <!-- Description -->
        <div class="form-group">
          <label for="description">Description</label>
          <textarea id="description" name="description" rows="4" placeholder="Enter product description"></textarea>
        </div>

        <!-- Dynamic Fields -->
        <div id="dynamicFields"></div>

         <!-- Hidden input to store attributes JSON -->
        <input type="hidden" id="attributes-json" name="attributes" />


        <!-- Submit Button -->
        <button type="submit" id="product-form">Add Product</button>

      </form>
    </div>

   <!-- Image Upload Section (Partial) -->
   <div class="image-upload-container">
    <%- include('../partials/imageUploadForm') %>
  </div>
  </div>

  <script>
    const categorySelect = document.getElementById('category_id');
    const dynamicFields = document.getElementById('dynamicFields');

    const dynamicInputs = {
  1: [ // Clothing
    { label: 'Size', name: 'size', type: 'text', placeholder: 'e.g., S, M, L', attribute_id: 1 },
    { label: 'Color', name: 'color', type: 'text', placeholder: 'e.g., Red, Blue', attribute_id: 2 },
    { label: 'Gender', name: 'gender', type: 'select', options: ['Men', 'Women', 'Unisex'], attribute_id: 3 }
  ],
  2: [ // Accessories
    { label: 'Material', name: 'material', type: 'text', placeholder: 'e.g., Leather, Metal', attribute_id: 4 },
    { label: 'Color', name: 'color', type: 'text', placeholder: 'e.g., Black, Gold', attribute_id: 5 },
    { label: 'Brand', name: 'brand', type: 'text', placeholder: 'e.g., Fossil, Casio', attribute_id: 6 }
  ],
  3: [ // Gadgets
    { label: 'Brand', name: 'brand', type: 'text', placeholder: 'e.g., Apple, Samsung', attribute_id: 7 },
    { label: 'Model', name: 'model', type: 'text', placeholder: 'e.g., iPhone 14, Galaxy S21', attribute_id: 8 },
    { label: 'Features', name: 'features', type: 'text', placeholder: 'e.g., Bluetooth, NFC', attribute_id: 9 }
  ],
  4: [ // Cameras
    { label: 'Brand', name: 'brand', type: 'text', placeholder: 'e.g., Canon, Nikon', attribute_id: 10 },
    { label: 'Lens', name: 'lens', type: 'text', placeholder: 'e.g., 50mm, Zoom Lens', attribute_id: 11 },
    { label: 'Resolution', name: 'resolution', type: 'text', placeholder: 'e.g., 1080p, 4K', attribute_id: 12 }
  ],
  5: [ // Shoes
    { label: 'Size', name: 'size', type: 'text', placeholder: 'e.g., 6, 7, 8', attribute_id: 13 },
    { label: 'Material', name: 'material', type: 'text', placeholder: 'e.g., Leather, Canvas', attribute_id: 14 },
    { label: 'Color', name: 'color', type: 'text', placeholder: 'e.g., White, Black', attribute_id: 15 }
  ],
  6: [ // Bags
    { label: 'Brand', name: 'brand', type: 'text', placeholder: 'e.g., Louis Vuitton, Gucci', attribute_id: 16 },
    { label: 'Material', name: 'material', type: 'text', placeholder: 'e.g., Leather, Nylon', attribute_id: 17 },
    { label: 'Size', name: 'size', type: 'text', placeholder: 'e.g., Small, Medium, Large', attribute_id: 18 }
  ],
  7: [ // Furniture
    { label: 'Material', name: 'material', type: 'text', placeholder: 'e.g., Wood, Metal', attribute_id: 19 },
    { label: 'Dimensions', name: 'dimensions', type: 'text', placeholder: 'e.g., 5ft x 3ft', attribute_id: 20 },
    { label: 'Color', name: 'color', type: 'text', placeholder: 'e.g., Brown, White', attribute_id: 21 }
  ],
  8: [ // Books
    { label: 'Author', name: 'author', type: 'text', placeholder: 'e.g., J.K. Rowling, George Orwell', attribute_id: 22 },
    { label: 'Genre', name: 'genre', type: 'text', placeholder: 'e.g., Fiction, Non-Fiction', attribute_id: 23 },
    { label: 'Language', name: 'language', type: 'text', placeholder: 'e.g., English, Spanish', attribute_id: 24 }
  ],
  9: [ // Electronics
    { label: 'Brand', name: 'brand', type: 'text', placeholder: 'e.g., Sony, LG', attribute_id: 25 },
    { label: 'Model', name: 'model', type: 'text', placeholder: 'e.g., Bravia X90', attribute_id: 26 },
    { label: 'Power', name: 'power', type: 'text', placeholder: 'e.g., 220V, 110V', attribute_id: 27 }
  ],
  10: [ // Jewelry
    { label: 'Material', name: 'material', type: 'text', placeholder: 'e.g., Gold, Silver', attribute_id: 28 },
    { label: 'Gemstone', name: 'gemstone', type: 'text', placeholder: 'e.g., Diamond, Sapphire', attribute_id: 29 },
    { label: 'Weight', name: 'weight', type: 'text', placeholder: 'e.g., 1g, 2g', attribute_id: 30 }
  ]
};


categorySelect.addEventListener('change', () => {
  const selectedCategory = categorySelect.value;
  dynamicFields.innerHTML = '';  

  if (dynamicInputs[selectedCategory]) {
    dynamicInputs[selectedCategory].forEach(field => {
      const group = document.createElement('div');
      group.className = 'form-group';

      const label = document.createElement('label');
      label.textContent = field.label;
      group.appendChild(label);

      let inputElement;

      if (field.type === 'select') {
        // Create select input for 'select' type fields
        const select = document.createElement('select');
        select.name = `attribute_${field.name}`;
        select.required = true;

        field.options.forEach(option => {
          const opt = document.createElement('option');
          opt.value = option;
          opt.textContent = option;
          select.appendChild(opt);
        });

         // Add the 'attribute' class and the 'data-id' to the select element
         select.classList.add('attribute');
        select.setAttribute('data-id', field.attribute_id); // Add the attribute_id as data-id
        inputElement = select;
      } else {
        // Create input or textarea for other types
        const input = document.createElement(field.type === 'textarea' ? 'textarea' : 'input');
        input.type = field.type;
        input.name = `attribute_${field.name}`;
        input.placeholder = field.placeholder;
        input.required = true;

        // Add the 'attribute' class to the input element
        input.classList.add('attribute');
        input.setAttribute('data-id', field.attribute_id); // Add the attribute_id as data-id
        inputElement = input;
      }

      group.appendChild(inputElement);
      dynamicFields.appendChild(group);
    });
  }
});

    document.getElementById('addProductForm').addEventListener('submit', function (event) {

    event.preventDefault();
    const attributes = [];
    const attributeFields = document.querySelectorAll('.attribute');

    attributeFields.forEach((field) => {
      const attribute_id = field.getAttribute('data-id'); // Attribute ID from `data-id`
      const value = field.value; // The user's input or selected value
      if (value) {
        attributes.push({ attribute_id: parseInt(attribute_id), value });
      }
    });

    // Set the JSON string in the hidden input
    document.getElementById('attributes-json').value = JSON.stringify(attributes);

    // Submit the form
    this.submit();
  });

  </script>
</body>
</html>
